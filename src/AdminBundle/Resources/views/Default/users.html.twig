{% extends "AdminBundle:Layouts:master.html.twig" %}

{% set title = 'Utilisateurs' %}

{% block head %}
    <!-- iCheck -->
    <link href="{{ asset('node_modules/icheck/skins/flat/green.css') }}" rel="stylesheet">
    {% include 'AdminBundle:Plugins:data_tables.css.html.twig' %}

{% endblock %}

{% block body %}
    <div id="mediasTableContainer">
        {{ include('AdminBundle:Default:usersTable.html.twig', { 'users': users }) }}
    </div>
{% endblock %}

{% block modals %}
<div id="modals"></div>
{% endblock %}

{% block scripts %}
    <!-- iCheck -->
    <script src="{{ asset('node_modules/icheck/icheck.min.js') }}"></script>
    <script src="{{ asset('node_modules/bootstrap-validator/dist/validator.min.js') }}"></script>
    {% include 'AdminBundle:Plugins:data_tables.js.html.twig' %}

    <script>
        $("#datatable").DataTable();

        function openEditUserRightsModal(event, userId) {
            event.preventDefault();
            $.get("{{ path('admin_editUsersRolesModal') }}/"+userId, function(data) {
                if (data.error) {
                    showError(data.message);
                } else {
                    $('#modals').html(data);
                    $("#editUserRolesModal").modal({
                        backdrop: 'static',
                        keyboard: false
                    });
                }
            })
        }

        function openUserTransactionsHistoryModal(event, userId) {
            event.preventDefault();
            $.get("{{ path('admin_userTransactionsHistoryModal') }}/" + userId, function(data) {
                if (data.error) {
                    showError(data.message);
                } else {
                    $('#modals').html(data);
                    $("#datatable1").DataTable();
                    $("#userTransactionsHistoryModal").modal({
                        backdrop: 'static',
                        keyboard: false
                    });
                }
            })
        }

        function openAddUserFundsModal(event, userId) {
            event.preventDefault();
            $.get("{{ path('admin_addUserFundsModal') }}/" + userId, function(data) {
                if (data.error) {
                    showError(data.message);
                } else {
                    $('#modals').html(data);
                    $("#addUserFundsModal").modal({
                        backdrop: 'static',
                        keyboard: false
                    });
                    $("#user_add_funds-form").validator();
                }
            })
        }

        function addUserRole(userId, role) {
            disableModalInputs(true);
            $.post("{{ path('admin_editUsersRolesModal') }}/"+userId, {role: role}, function(data) {
                data = JSON.parse(data);
                if (data.success) {
                    $('#editUserRolesModal #userRoles').append("<li class=\"list-group-item\">" + role +
                        "<button type=\"button\" class=\"btn btn-danger btn-xs deleteRoleButton\" onclick=\"deleteUserRole(" + userId + ", '" + role + "');\">Supprimer</button>" +
                        "</li>");
                    $("tr[data-userId=" + userId + "] .td-roles").prepend(role);
                }
                else if (data.error) {
                    showError(data.message);
                }
                else {
                    showError("Une erreur est survenue, veuillez réessayer.")
                }
                disableModalInputs(false);
            })
        }

        function deleteUserRole(userId, role) {
            disableModalInputs(true);
            $.post("{{ path('admin_editUsersRolesModal') }}/"+userId, {role: role, delete: true}, function(data) {
                data = JSON.parse(data);
                if (data.success) {
                    $('#editUserRolesModal #userRoles li:contains('+ role +')').remove();
                    var userRolesTd = $("tr[data-userId=" + userId + "] .td-roles");
                    userRolesTd.html(userRolesTd.html().replace(new RegExp(role, "g"), '').replace(/\s\s/g, ' '));
                }
                else if (data.error) {
                    showError(data.message);
                }
                else {
                    showError("Une erreur est survenue, veuillez réessayer.")
                }
                disableModalInputs(false);
            })
        }

        $(document).on("click", "#user_add_funds_save", function(e){
            e.preventDefault();

            // get the properties and values from the form
            form = $("#user_add_funds-form");

            if(!form.data('bs.validator').validate().hasErrors()) {
                data = objectifyForm(form.serializeArray());

                disableModalInputs(true);
                $.post(form.attr('action'), data, function(data) {
                    data = JSON.parse(data);
                    if (data.success) {
                        showSuccess("Funds added");
                        updateTable();
                        $("#addUserFundsModal").modal('hide');
                    }
                    else if (data.error) {
                        showError(data.message);
                    }
                    else {
                        showError("Une erreur est survenue, veuillez réessayer.");
                    }
                    disableModalInputs(false);
                })
            }
        })

        function updateTable() {
            $.get("{{ path('admin_usersTable') }}", function(data) {
                try
                {
                    var dataJson = JSON.parse(data);
                    if (dataJson.error)
                        showError(dataJson.message);
                }
                catch(e)
                {
                    $('#mediasTableContainer').html(data);
                    $("#datatable").DataTable();
                }
            })
        }
    </script>
{% endblock %}