{% extends "AdminBundle:Layouts:master.html.twig" %}

{% set title = 'Media Types' %}

{% block head %}
    <!-- iCheck -->
    <link href="{{ asset('node_modules/icheck/skins/flat/green.css') }}" rel="stylesheet">
    {% include 'AdminBundle:Plugins:data_tables.css.html.twig' %}

{% endblock %}

{% block panel_toolbox %}
<li><a id="add_mediaType"><i class="fa fa-plus"></i></a>
{% endblock %}

{% block body %}
    <div id="mediaTypesTableContainer">
        {{ include('AdminBundle:Default:mediaTypesTable.html.twig', { 'mediaTypes': mediaTypes }) }}
    </div>
{% endblock %}

{% block modals %}
    <div id="modals"></div>
{% endblock %}

{% block scripts %}
    <!-- iCheck -->
    <script src="{{ asset('node_modules/icheck/icheck.min.js') }}"></script>
    <script src="{{ asset('node_modules/bootstrap-validator/dist/validator.min.js') }}"></script>
    {% include 'AdminBundle:Plugins:data_tables.js.html.twig' %}

    <script>
        $("#datatable").DataTable();

        function openEditMediaTypeModal(event, mediaTypeId) {
            event.preventDefault();
            $.get("{{ path('admin_editMediaTypeModal') }}/"+mediaTypeId, createEditMediaTypeModal)
        }

        $('#add_mediaType').click(function(e) {
            $.get("{{ path('admin_editMediaTypeModal', { mediaTypeId : 'new' }) }}", createEditMediaTypeModal)
        });

        $(document).on("submit", "#mediaType-form", function(e){
            e.preventDefault();

            // get the properties and values from the form
            form = $("#mediaType-form");
            if(!form.data('bs.validator').validate().hasErrors()) {
                formData = new FormData(form[0]);

                disableModalInputs(true);
                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: formData,
                    contentType: false, //this is requireded please see answers above
                    processData: false, //this is requireded please see answers above
                    error   : function(data) {showError("Une erreur est survenue, veuillez réessayer.");disableModalInputs(false);},
                    success : function(data) {
                        data = JSON.parse(data);
                        if (data.success) {
                            showSuccess("Media Type enregistré");
                            updateTable();
                            $("#editMediaTypeModal").modal('hide');
                        }
                        else if (data.error) {
                            showError(data.message);
                        }
                        else {
                            showError("Une erreur est survenue, veuillez réessayer.");
                        }
                        disableModalInputs(false);
                    }
                });
            }
        });

        function createEditMediaTypeModal(data) {
            try
            {
                var dataJson = JSON.parse(data);
                if (dataJson.error)
                    showError(dataJson.message);
            }
            catch(e)
            {
                $('#modals').html(data);
                $("#editMediaTypeModal").modal({
                    backdrop: 'static',
                    keyboard: false
                });
                $("#mediaType-form").validator();
            }
        }

        function updateTable() {
            $.get("{{ path('admin_getMediaTypesTable') }}", function(data) {
                try
                {
                    var dataJson = JSON.parse(data);
                    if (dataJson.error)
                        showError(dataJson.message);
                }
                catch(e)
                {
                    $('#mediaTypesTableContainer').html(data);
                    $("#datatable").DataTable();
                }
            })
        }
    </script>
{% endblock %}